---
driver:
  name: docker
  privileged: true
  use_sudo: false

transport:
  name: sftp

provisioner:
  name: ansible_playbook
  hosts: all
  roles_path: roles
  # copy the symlinks too (only copy_role_path does a recursive copy, nothing else does)
  additional_copy_role_path: roles
  ansible_verbose: true
  ansible_verbosity: 2
  idempotency_test: true
  extra_vars:
    st2repo_name: <%= ENV['ST2_REPO'] || 'stable' %>
    bwc_repo: <%= ENV['BWC_REPO'] || 'enterprise' %>
    bwc_license: <%= ENV['LICENSE'] ? ENV[ENV['LICENSE']] : ENV['BWC_LICENSE_ENTERPRISE'] %>
    st2chatops_hubot_adapter: slack
    st2chatops_config:
      HUBOT_SLACK_TOKEN: <%= ENV['HUBOT_SLACK_TOKEN'] %>

platforms:
  # Ubuntu Trusty with Upstart
  - name: ubuntu-14.04
    driver_config:
      image: stackstorm/packagingtest:trusty-upstart
      platform: ubuntu
      disable_upstart: false
      run_command: /sbin/init
  # Ubuntu Xenial with Systemd
  - name: ubuntu-16.04
    driver_config:
      image: stackstorm/packagingtest:xenial-systemd
      platform: ubuntu
      run_command: /sbin/init
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro
  # CentOS6 with sysV init
  - name: centos-6
    driver_config:
      platform: centos
      dockerfile: .kitchen-docker/centos6/Dockerfile
      run_command: /usr/sbin/sshd -D
  # CentOS7 with Systemd
  - name: centos-7
    driver_config:
      platform: centos
      dockerfile: .kitchen-docker/centos7/Dockerfile
      run_command: /sbin/init
      volume:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro

suites:
  - name: secure_mongo
    provisioner:
      extra_vars:
        st2_config:
          database:
            username: st2mongo
            password: Sw33tM0ng0Passw0rd
            db_name: st2
          messaging:
            url: amqp://st2rmq:S33tRa44itPassw0rd@127.0.0.1:5672/st2
        rabbitmq_plugins:
          - rabbitmq_management
  - name: default
